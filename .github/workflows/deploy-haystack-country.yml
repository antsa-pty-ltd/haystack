name: Deploy Haystack AI Service to Azure (Multi-Country)

on:
  push:
    branches: [ main, develop ]
  workflow_dispatch:
    inputs:
      country:
        description: 'Country to deploy to (au, us, uk)'
        required: true
        default: 'au'
        type: choice
        options:
        - au
        - us
        - uk
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'production'
        type: choice
        options:
        - production
        - staging

env:
  PYTHON_VERSION: '3.11'

jobs:
  determine-deployments:
    runs-on: ubuntu-latest
    outputs:
      countries: ${{ steps.set-countries.outputs.countries }}
    steps:
    - name: Determine countries to deploy
      id: set-countries
      run: |
        if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
          # Manual trigger - deploy specific country
          echo "countries=[\"${{ github.event.inputs.country }}\"]" >> $GITHUB_OUTPUT
        elif [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
          # Main branch - deploy to Australia only for now
          echo "countries=[\"au\"]" >> $GITHUB_OUTPUT
        else
          # Develop branch - deploy to staging
          echo "countries=[\"au\"]" >> $GITHUB_OUTPUT
        fi

  build-and-deploy:
    needs: determine-deployments
    runs-on: ubuntu-latest
    strategy:
      matrix:
        country: ${{ fromJson(needs.determine-deployments.outputs.countries) }}
    
    steps:
    - name: 'Checkout code'
      uses: actions/checkout@v4

    - name: 'Azure Login'
      uses: azure/login@v1
      with:
        creds: ${{ secrets[format('AZURE_CREDENTIALS_{0}', matrix.country)] }}

    - name: 'Setup Python'
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}
        cache: 'pip'

    - name: 'Set environment variables'
      run: |
        # Force production environment for now
        ENV="production"
        
        echo "DEPLOY_ENV=${ENV}" >> $GITHUB_ENV
        echo "COUNTRY_CODE=${{ matrix.country }}" >> $GITHUB_ENV
        echo "APP_NAME=antsa-haystack-${{ matrix.country }}-${ENV}" >> $GITHUB_ENV

    - name: 'Install dependencies'
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: 'Create deployment package'
      run: |
        mkdir deploy
        # Copy all Python files
        cp *.py deploy/
        cp requirements.txt deploy/
        
        # Copy any configuration files
        [ -f .env.example ] && cp .env.example deploy/ || true
        [ -f env-template.txt ] && cp env-template.txt deploy/ || true
        
        # Install production dependencies
        cd deploy
        pip install -r requirements.txt --target ./packages
        
        # Clean up unnecessary files
        find packages -name "*.pyc" -delete
        find packages -name "__pycache__" -type d -exec rm -rf {} + 2>/dev/null || true
        find packages -name "*.dist-info" -type d -exec rm -rf {} + 2>/dev/null || true
        find packages -name "tests" -type d -exec rm -rf {} + 2>/dev/null || true
        find packages -name "test" -type d -exec rm -rf {} + 2>/dev/null || true
        
        # Create a simple startup script
        cat > startup.sh << 'EOF'
#!/bin/bash
export PYTHONPATH=/home/site/wwwroot/packages:$PYTHONPATH
cd /home/site/wwwroot
python -m uvicorn main:app --host 0.0.0.0 --port 8000
EOF
        chmod +x startup.sh
        
        echo "Deployment package created for Python FastAPI service"

    - name: 'Deploy to Azure Web App (AU)'
      if: matrix.country == 'au'
      uses: azure/webapps-deploy@v2
      with:
        app-name: ${{ env.APP_NAME }}
        publish-profile: ${{ secrets.AZUREAPPSERVICE_HAYSTACK_PUBLISHPROFILE_AU_PRODUCTION }}
        package: './deploy'
      env:
        # Environment configuration
        LOG_LEVEL: INFO
        HOST: 0.0.0.0
        PORT: 8000
        
        # Session and tool configuration
        SHOW_TOOL_BANNER: 'true'
        SHOW_RAW_TOOL_JSON: 'false'
        MAX_REQUESTS_PER_USER: 10
        SESSION_TIMEOUT_MINUTES: 240
        MAX_CONCURRENT_REQUESTS: 10000
        
        # OpenAI Configuration
        OPENAI_API_KEY: ${{ secrets[format('OPENAI_API_KEY_{0}', matrix.country)] }}
        
        # Redis Configuration
        REDIS_URL: ${{ secrets[format('REDIS_URL_{0}', matrix.country)] }}
        
        # Database Configuration
        DATABASE_URL: ${{ secrets[format('DATABASE_URL_{0}', matrix.country)] }}
        
        # NestJS API Configuration
        NESTJS_API_URL: ${{ format('https://{0}.api.antsa.ai', matrix.country) }}
        
        # Country-specific settings
        COUNTRY_CODE: ${{ matrix.country }}

    - name: 'Deploy to Azure Web App (US)'
      if: matrix.country == 'us'
      uses: azure/webapps-deploy@v2
      with:
        app-name: ${{ env.APP_NAME }}
        publish-profile: ${{ secrets.AZUREAPPSERVICE_HAYSTACK_PUBLISHPROFILE_US_PRODUCTION }}
        package: './deploy'
      env:
        # Environment configuration
        LOG_LEVEL: INFO
        HOST: 0.0.0.0
        PORT: 8000
        
        # Session and tool configuration
        SHOW_TOOL_BANNER: 'true'
        SHOW_RAW_TOOL_JSON: 'false'
        MAX_REQUESTS_PER_USER: 10
        SESSION_TIMEOUT_MINUTES: 240
        MAX_CONCURRENT_REQUESTS: 10000
        
        # OpenAI Configuration
        OPENAI_API_KEY: ${{ secrets[format('OPENAI_API_KEY_{0}', matrix.country)] }}
        
        # Redis Configuration
        REDIS_URL: ${{ secrets[format('REDIS_URL_{0}', matrix.country)] }}
        
        # Database Configuration
        DATABASE_URL: ${{ secrets[format('DATABASE_URL_{0}', matrix.country)] }}
        
        # NestJS API Configuration
        NESTJS_API_URL: ${{ format('https://{0}.api.antsa.ai', matrix.country) }}
        
        # Country-specific settings
        COUNTRY_CODE: ${{ matrix.country }}

    - name: 'Deploy to Azure Web App (UK)'
      if: matrix.country == 'uk'
      uses: azure/webapps-deploy@v2
      with:
        app-name: ${{ env.APP_NAME }}
        publish-profile: ${{ secrets.AZUREAPPSERVICE_HAYSTACK_PUBLISHPROFILE_UK_PRODUCTION }}
        package: './deploy'
      env:
        # Environment configuration
        LOG_LEVEL: INFO
        HOST: 0.0.0.0
        PORT: 8000
        
        # Session and tool configuration
        SHOW_TOOL_BANNER: 'true'
        SHOW_RAW_TOOL_JSON: 'false'
        MAX_REQUESTS_PER_USER: 10
        SESSION_TIMEOUT_MINUTES: 240
        MAX_CONCURRENT_REQUESTS: 10000
        
        # OpenAI Configuration
        OPENAI_API_KEY: ${{ secrets[format('OPENAI_API_KEY_{0}', matrix.country)] }}
        
        # Redis Configuration
        REDIS_URL: ${{ secrets[format('REDIS_URL_{0}', matrix.country)] }}
        
        # Database Configuration
        DATABASE_URL: ${{ secrets[format('DATABASE_URL_{0}', matrix.country)] }}
        
        # NestJS API Configuration
        NESTJS_API_URL: ${{ format('https://{0}.api.antsa.ai', matrix.country) }}
        
        # Country-specific settings
        COUNTRY_CODE: ${{ matrix.country }}