name: Deploy Haystack to Azure AU

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: 'Checkout code'
      uses: actions/checkout@v4

    - name: 'Setup Python'
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: 'Install dependencies'
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: 'Create deployment package'
      run: |
        mkdir deploy
        # Copy full FastAPI Haystack service
        cp main.py deploy/
        cp config.py deploy/
        cp personas.py deploy/
        cp session_manager.py deploy/
        cp pipeline_manager.py deploy/
        cp haystack_pipeline.py deploy/
        cp ui_state_manager.py deploy/
        cp tools.py deploy/
        cp requirements.txt deploy/
        cp startup.sh deploy/
        
        # Verify main.py is present (critical for service)
        if [ ! -f deploy/main.py ]; then
          echo "ERROR: main.py not found - Service will not work!"
          exit 1
        fi
        
        # Provide a Python entrypoint that invokes our startup.sh (robust quoting)
        printf '%s\n' '#!/usr/bin/env python3' 'import subprocess' 'subprocess.run(["bash", "startup.sh"], check=True)' > deploy/startup.py
        chmod +x deploy/startup.py
        
        echo "âœ… Full FastAPI Haystack service with WebSocket support packaged"
        ls -la deploy/

    - name: 'Validate startup.py'
      run: |
        echo "--- startup.py ---"
        sed -n '1,120p' deploy/startup.py
        echo "---------------"
        python -c "import ast,sys,pathlib;code=pathlib.Path('deploy/startup.py').read_text(encoding='utf-8');ast.parse(code);print('startup.py syntax OK')"

    - name: 'Azure Login'
      uses: azure/login@v2
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS_AU }}

    - name: 'Deploy to Azure Web App'
      uses: azure/webapps-deploy@v2
      with:
        app-name: 'antsa-haystack-au-production'
        package: './deploy'
        slot-name: 'production'
        startup-command: 'python startup.py'
      env:
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY_AU }}
        REDIS_URL: ${{ secrets.REDIS_URL_AU }}
        DATABASE_URL: ${{ secrets.DATABASE_URL_AU }}
        NESTJS_API_URL: 'https://au.api.antsa.ai'
        LOG_LEVEL: 'INFO'
        HOST: '0.0.0.0'
        PORT: '8000'
        SCM_DO_BUILD_DURING_DEPLOYMENT: 'true'
        ENABLE_ORYX_BUILD: 'true'
        SHOW_TOOL_BANNER: 'true'
        SHOW_RAW_TOOL_JSON: 'false'
        MAX_REQUESTS_PER_USER: '10'
        SESSION_TIMEOUT_MINUTES: '240'
        MAX_CONCURRENT_REQUESTS: '10000'
        COUNTRY_CODE: 'au'
